@using CaronasMVCWebApp.Models.Enums
@model List<CaronasMVCWebApp.Models.Ride>

@{
    ViewData["Title"] = "Viagens cadastradas";
}

@if (TempData["SuccessMessage"] != null)
{

    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{

    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}
<h2>@ViewData["Title"]</h2>

<p>

    <a asp-action="Create" class="btn btn-primary" data-toggle="tooltip" data-placement="bottom" title="Cadastrar Nova Viagem">
        <i class="glyphicon glyphicon-plus-sign">
        </i>
        <strong>  Novo</strong>
    </a>
</p>
<table class="table table-responsive table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(Model => Model[0].Date)
            </th>
            <th>
                @Html.DisplayNameFor(Model => Model[0].DriverId)
            </th>
            <th>
                @Html.DisplayNameFor(Model => Model[0].DestinyId)
            </th>
            <th>
                @Html.DisplayNameFor(Model => Model[0].PassengerId)
            </th>
            <th>
                @Html.DisplayNameFor(Model => Model[0].PaymentStatus)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Driver.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Destiny.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PassengerId)
                </td>
                <td>
                    @{
                        string label = "";
                    }
                    @if (item.PaymentStatus == PaymentStatus.NotPaid)
                    {
                        label = "label label-danger";
                    }
                    @if (item.PaymentStatus == PaymentStatus.Paid)
                    {
                        label = "label label-success";
                    }
                    <span class="@label">@Html.DisplayFor(modelItem => item.PaymentStatus)</span>
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info glyphicon glyphicon-search" data-toggle="tooltip" data-placement="bottom" title="Detalhes"></a>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-default glyphicon glyphicon-pencil" data-toggle="tooltip" data-placement="bottom" title="Alterar"></a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger glyphicon glyphicon-trash" data-toggle="tooltip" data-placement="bottom" title="Deletar"></a>
                </td>
            </tr>
        }

    </tbody>
</table>